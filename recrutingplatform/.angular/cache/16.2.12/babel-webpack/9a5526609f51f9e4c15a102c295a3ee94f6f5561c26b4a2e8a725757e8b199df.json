{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'; //Für Formulare \nlet AnmeldungComponent = class AnmeldungComponent {\n  //Router instanziieren\n  constructor(router) {\n    this.router = router;\n    this.isRecruiter = false;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n    console.log('Router wurde instanziiert!');\n  }\n  onSubmit() {\n    // Hier kommt der Service-Aufruf, um Email bzw. Benutzer und Passwort abzugleichen -> Serviceaufruf(email,pw, rolle) mit Rückgabewert true/false\n    //Zugriff auf Email über: this.loginForm.value.email\n    //Zugriff auf Passwort über: this.loginForm.value.password\n    /*Dummy-Logik*/\n    if (this.loginForm.value.email == 'man-to.wong@hotmail.de' && this.loginForm.value.password == 'manto') {\n      this.router.navigate(['/']);\n    } else {\n      alert('Falsche Eingabe!');\n      window.location.reload();\n    }\n  }\n  toggleRole() {\n    this.isRecruiter = !this.isRecruiter;\n  }\n};\nAnmeldungComponent = __decorate([Component({\n  selector: 'app-anmeldung',\n  templateUrl: './anmeldung.component.html',\n  styleUrls: ['./anmeldung.component.scss']\n})], AnmeldungComponent);\nexport { AnmeldungComponent };","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","AnmeldungComponent","constructor","router","isRecruiter","loginForm","email","required","password","console","log","onSubmit","value","navigate","alert","window","location","reload","toggleRole","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\man-t\\Desktop\\Webtechnologien\\recrutingplatform\\src\\app\\anmeldung\\anmeldung.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'; //Für Formulare \nimport { Router } from '@angular/router'; //Router für Weiterleitung nach Submit\n\n\n@Component({\n  selector: 'app-anmeldung',\n  templateUrl: './anmeldung.component.html',\n  styleUrls: ['./anmeldung.component.scss']\n})\nexport class AnmeldungComponent {\n  isRecruiter = false;\n\n\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required)\n  });\n  \n  //Router instanziieren\n  constructor(private router: Router) { \n    console.log('Router wurde instanziiert!')\n  }\n\n  onSubmit(): void {\n    // Hier kommt der Service-Aufruf, um Email bzw. Benutzer und Passwort abzugleichen -> Serviceaufruf(email,pw, rolle) mit Rückgabewert true/false\n    //Zugriff auf Email über: this.loginForm.value.email\n    //Zugriff auf Passwort über: this.loginForm.value.password\n    \n    /*Dummy-Logik*/\n    if(this.loginForm.value.email == 'man-to.wong@hotmail.de' && this.loginForm.value.password == 'manto'){\n      this.router.navigate(['/']);\n    }\n    else{\n      alert('Falsche Eingabe!')\n      window.location.reload();\n    }\n  }\n\n  toggleRole(): void {\n    this.isRecruiter = !this.isRecruiter;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB,CAAC,CAAC;AASrE,IAAaC,kBAAkB,GAA/B,MAAaA,kBAAkB;EAS7B;EACAC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAT1B,KAAAC,WAAW,GAAG,KAAK;IAGnB,KAAAC,SAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACM,KAAK,CAAC,CAAC;MACnEE,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACO,QAAQ;KAClD,CAAC;IAIAE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;EAEAC,QAAQA,CAAA;IACN;IACA;IACA;IAEA;IACA,IAAG,IAAI,CAACN,SAAS,CAACO,KAAK,CAACN,KAAK,IAAI,wBAAwB,IAAI,IAAI,CAACD,SAAS,CAACO,KAAK,CAACJ,QAAQ,IAAI,OAAO,EAAC;MACpG,IAAI,CAACL,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAC5B,MACG;MACFC,KAAK,CAAC,kBAAkB,CAAC;MACzBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;;EAE5B;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACd,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;CACD;AAhCYH,kBAAkB,GAAAkB,UAAA,EAL9BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWrB,kBAAkB,CAgC9B;SAhCYA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}